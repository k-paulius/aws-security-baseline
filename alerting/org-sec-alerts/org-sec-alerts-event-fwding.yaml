AWSTemplateFormatVersion: 2010-09-09
Description: 'Security alert forwarding to the central event bus'

Parameters:

  pOrgSecEventBus:
    Description: 'Organization wide security alert event bus ARN'
    Type: String

  pHomeRegion:
    Description: 'Name of the home region (region where global resources will be deployed)'
    Type: String
    AllowedPattern: '^[a-z0-9-]{1,64}$'
    ConstraintDescription: 'Must be AWS Region (e.g. us-east-1)'

  pSecurityToolingAccountId:
    Description: 'Security Tooling Account ID'
    Type: String
    AllowedPattern: '^[0-9]{12}$'
    ConstraintDescription: 'Must be 12 digits'

  pWorkloadIdTag:
    Description: 'Workload Id (value used in the "workload-id" tag)'
    Type: String
    Default: 'org-sec-alerts'
    AllowedPattern: '[a-zA-Z0-9\-_]+'
    ConstraintDescription: 'Workload Id value must contain only alphanumeric characters, hyphens, and underscores'

  pEnvironmentIdTag:
    Description: 'Environment Id (value used in the "environment-id" tag)'
    Type: String
    AllowedPattern: '[a-zA-Z0-9\-_]+'
    ConstraintDescription: 'Environment Id value must contain only alphanumeric characters, hyphens, and underscores'

  pOwnerNameTag:
    Description: 'Owner Name (value used in the "owner" tag)'
    Type: String
    AllowedPattern: '[a-zA-Z0-9\-_]+'
    ConstraintDescription: 'Owner name value must contain only alphanumeric characters, hyphens, and underscores'

Conditions:

  cIsHomeRegion: !Equals [ !Ref 'AWS::Region', !Ref pHomeRegion ]
  cIsSecurityToolingAccount: !Equals [ !Ref 'AWS::AccountId', !Ref pSecurityToolingAccountId ]
  cIsSecurityToolingAccountHomeRegion: !And [!Condition cIsSecurityToolingAccount, !Condition cIsHomeRegion]

Resources:

  rOrgSecAlertsEventFwdRuleRole:
    Condition: cIsHomeRegion
    Type: AWS::IAM::Role
    Properties:
      RoleName: 'org-sec-alerts-event-fwd-rule-role'
      Description: 'Execution role for "org-sec-alerts" event forwarding rules'
      Path: /
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: sts:AssumeRole
            Condition:
              ArnLike:
                aws:SourceArn: !Sub 'arn:${AWS::Partition}:events:*:${AWS::AccountId}:rule/org-sec-alerts-*'
      Policies:
        - PolicyName: put-events
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'events:PutEvents'
                Resource:
                  - !Ref pOrgSecEventBus
      Tags:
        - Key: 'workload-id'
          Value: !Ref pWorkloadIdTag
        - Key: 'environment-id'
          Value: !Ref pEnvironmentIdTag
        - Key: 'owner'
          Value: !Ref pOwnerNameTag

  rOrgSecAlertsRootSigninFwdRule:
    Type: AWS::Events::Rule
    Properties:
      Name: 'org-sec-alerts-root-signin-fwd-rule'
      Description: 'Forwards root user events from the "signin" event source to the central event bus'
      EventBusName: default
      State: ENABLED_WITH_ALL_CLOUDTRAIL_MANAGEMENT_EVENTS
      EventPattern:
        source:
          - 'aws.signin'
        detail-type:
          - 'AWS Console Sign In via CloudTrail'
        detail:
          userIdentity:
            $or:
              - type:
                  - 'Root'
              - sessionContext:
                  sessionIssuer:
                    type:
                      - 'Root'
          eventName:
            - 'ConsoleLogin'
            - 'GetSigninToken'
            - 'PasswordRecoveryRequested'
            - 'PasswordRecoveryCompleted'
            - 'EmailUpdated'
            - 'PasswordUpdated'
      Targets:
        - Id: 'rOrgSecEventBus'
          Arn: !Ref pOrgSecEventBus
          RoleArn: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:role/org-sec-alerts-event-fwd-rule-role'

  rOrgSecAlertsMgmtEventFwdRule:
    Type: AWS::Events::Rule
    Properties:
      Name: 'org-sec-alerts-mgmt-event-fwd-rule'
      Description: 'Forwards all events that are delivered by CloudTrail to the central event bus'
      EventBusName: default
      State: ENABLED
      EventPattern:
        detail-type:
          - 'AWS API Call via CloudTrail'
      Targets:
        - Id: 'rOrgSecEventBus'
          Arn: !Ref pOrgSecEventBus
          RoleArn: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:role/org-sec-alerts-event-fwd-rule-role'

  rOrgSecAlertsGuardDutyRule:
    Condition: cIsSecurityToolingAccount
    Type: AWS::Events::Rule
    Properties:
      Name: 'org-sec-alerts-guardduty-fwd-rule'
      Description: 'Forwards all GuardDuty events to the central event bus'
      EventBusName: default
      State: ENABLED
      EventPattern:
        source:
          - 'aws.guardduty'
        detail-type:
          - 'GuardDuty Finding'
          - 'GuardDuty Runtime Protection Healthy'
          - 'GuardDuty Runtime Protection Unhealthy'
      Targets:
        - Id: 'rOrgSecEventBus'
          Arn: !Ref pOrgSecEventBus
          RoleArn: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:role/org-sec-alerts-event-fwd-rule-role'

  rOrgSecAlertsSecurityHubRule:
    Condition: cIsSecurityToolingAccountHomeRegion
    Type: AWS::Events::Rule
    Properties:
      Name: 'org-sec-alerts-securityhub-fwd-rule'
      Description: 'Forwards all Security Hub events to the central event bus'
      EventBusName: default
      State: ENABLED
      EventPattern:
        source:
          - 'aws.securityhub'
        detail-type:
          - 'Security Hub Findings - Imported'
          #- 'Security Hub Findings - Custom Action'
          #- 'Security Hub Insight Results'
      Targets:
        - Id: 'rOrgSecEventBus'
          Arn: !Ref pOrgSecEventBus
          RoleArn: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:role/org-sec-alerts-event-fwd-rule-role'

Outputs:

  oTemplateVersion:
    Description: 'Template version'
    Value: '1.0.15'
