AWSTemplateFormatVersion: 2010-09-09
Description: 'Organization wide security event bus'

Parameters:

  pOrgID:
    Description: 'AWS Organization ID (e.g., o-abc1234567)'
    Type: String
    AllowedPattern: '^o-[a-zA-Z0-9]{10}$'
    ConstraintDescription: 'Must be a valid AWS Organization ID (e.g., o-abc1234567)'

  pDeployEmailAlerts:
    Description: 'Deploy e-mail alerts? (When enabled, deploys an SNS topic subscribed to the specified email)'
    Type: String
    Default: 'no'
    AllowedValues:
         - 'yes'
         - 'no'

  pDeploySlackAlerts:
    Description: 'Deploy Slack alerts? (When enabled, deploys an SNS topic subscribed to the Slack channel via AWS Chatbot)'
    Type: String
    Default: 'no'
    AllowedValues:
         - 'yes'
         - 'no'

  pCriticalAlertEmail:
    Description: 'Organization-wide critical security alerts email address (Required if e-mail alerts are enabled)'
    Type: String
    AllowedPattern: ".{0}|[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}"
    ConstraintDescription: 'Must be a valid email address'

  pSlackWorkspaceId:
    Description: 'Slack Workspace ID (Required if Slack alerts are enabled)'
    Type: String
    AllowedPattern: '.{0}|[0-9A-Z]{1,255}'
    ConstraintDescription: 'Slack workspace ID must contain only upper case letters and digits'

  pSlackChannelId:
    Description: 'Slack Channel ID (Required if Slack alerts are enabled)'
    Type: String
    AllowedPattern: '.{0}|[A-Za-z0-9]+'
    ConstraintDescription: 'Slack channel ID must contain only letters and digits'

  pWorkloadIdTag:
    Description: 'Workload Id (value used in the "workload-id" tag)'
    Type: String
    Default: 'org-sec-alerts'
    AllowedPattern: '[a-zA-Z0-9\-_]+'
    ConstraintDescription: 'Workload Id value must contain only alphanumeric characters, hyphens, and underscores'

  pEnvironmentIdTag:
    Description: 'Environment Id (value used in the "environment-id" tag)'
    Type: String
    AllowedPattern: '[a-zA-Z0-9\-_]+'
    ConstraintDescription: 'Environment Id value must contain only alphanumeric characters, hyphens, and underscores'

  pOwnerNameTag:
    Description: 'Owner Name (value used in the "owner" tag)'
    Type: String
    AllowedPattern: '[a-zA-Z0-9\-_]+'
    ConstraintDescription: 'Owner name value must contain only alphanumeric characters, hyphens, and underscores'

Conditions:

  cDeployEmailAlerts: !Equals [ !Ref pDeployEmailAlerts, 'yes']
  cDeploySlackAlerts: !Equals [ !Ref pDeploySlackAlerts, 'yes']
  cDeployAlerts: !Or [ !Condition cDeployEmailAlerts, !Condition cDeploySlackAlerts ]

Resources:

  rOrgSecEventBus:
    Type: AWS::Events::EventBus
    Properties:
      Name: 'org-sec-event-bus'
      Tags:
        - Key: 'workload-id'
          Value: !Ref pWorkloadIdTag
        - Key: 'environment-id'
          Value: !Ref pEnvironmentIdTag
        - Key: 'owner'
          Value: !Ref pOwnerNameTag

  rOrgSecEventBusPolicy:
    Type: AWS::Events::EventBusPolicy
    Properties:
      EventBusName: !Ref rOrgSecEventBus
      StatementId: 'AllowOrgMemberAccountsToPutEvents'
      Statement:
        Effect: 'Allow'
        Principal: '*'
        Action: 'events:PutEvents'
        Resource: !GetAtt rOrgSecEventBus.Arn
        Condition:
          StringEquals:
            'aws:PrincipalOrgID': !Ref pOrgID

  rCriticalOrgSecEmailAlertsSNSTopic:
    Type: AWS::SNS::Topic
    Condition: cDeployEmailAlerts
    Properties:
      TopicName: 'org-sec-alerts-crit-email'
      # DisplayName is used as "from" name in the email
      DisplayName: 'Critical Security Alerts'
      Tags:
        - Key: 'workload-id'
          Value: !Ref pWorkloadIdTag
        - Key: 'environment-id'
          Value: !Ref pEnvironmentIdTag
        - Key: 'owner'
          Value: !Ref pOwnerNameTag

  rCriticalOrgSecEmailAlertsSNSTopicPolicy:
    Type: AWS::SNS::TopicInlinePolicy
    Condition: cDeployEmailAlerts
    Properties:
      TopicArn: !Ref rCriticalOrgSecEmailAlertsSNSTopic
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action:
              - sns:Publish
            Resource: !Ref rCriticalOrgSecEmailAlertsSNSTopic
            Condition:
              ArnLike:
                aws:SourceArn: !Sub 'arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:rule/org-sec-event-bus/org-sec-alerts-*'

  rCriticalOrgSecEmailAlertsSNSTopicSub:
    Type: AWS::SNS::Subscription
    Condition: cDeployEmailAlerts
    Properties:
      Endpoint: !Ref pCriticalAlertEmail
      Protocol: email
      TopicArn: !Ref rCriticalOrgSecEmailAlertsSNSTopic

  rCriticalOrgSecSlackAlertsSNSTopic:
    Type: AWS::SNS::Topic
    Condition: cDeploySlackAlerts
    Properties:
      TopicName: 'org-sec-alerts-crit-slack'
      DisplayName: 'Critical Organization Wide Security Alerts'
      Tags:
        - Key: 'workload-id'
          Value: !Ref pWorkloadIdTag
        - Key: 'environment-id'
          Value: !Ref pEnvironmentIdTag
        - Key: 'owner'
          Value: !Ref pOwnerNameTag

  rCriticalOrgSecSlackAlertsSNSTopicPolicy:
    Type: AWS::SNS::TopicInlinePolicy
    Condition: cDeploySlackAlerts
    Properties:
      TopicArn: !Ref rCriticalOrgSecSlackAlertsSNSTopic
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action:
              - sns:Publish
            Resource: !Ref rCriticalOrgSecSlackAlertsSNSTopic
            Condition:
              ArnLike:
                aws:SourceArn: !Sub 'arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:rule/org-sec-event-bus/org-sec-alerts-*'

  rChatbotSlackChannel:
    Type: AWS::Chatbot::SlackChannelConfiguration
    Condition: cDeploySlackAlerts
    Properties:
      ConfigurationName: 'org-sec-alerts-slack-channel'
      LoggingLevel: INFO
      SlackWorkspaceId: !Ref pSlackWorkspaceId
      SlackChannelId: !Ref pSlackChannelId
      UserRoleRequired: false
      IamRoleArn: !GetAtt rChatbotSlackChannelRole.Arn
      GuardrailPolicies:
        - 'arn:aws:iam::aws:policy/ReadOnlyAccess'
      SnsTopicArns:
        - !Ref rCriticalOrgSecSlackAlertsSNSTopic

  rChatbotSlackChannelRole:
    Type: AWS::IAM::Role
    Condition: cDeploySlackAlerts
    Properties:
      RoleName: 'org-sec-alerts-slack-channel-role'
      Description: 'AWS Chatbot channel role for "org-sec-alerts-slack-channel"'
      Path: /
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: chatbot.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: deny-all
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Deny
                Action:
                  - '*'
                Resource:
                  - '*'
      Tags:
        - Key: 'workload-id'
          Value: !Ref pWorkloadIdTag
        - Key: 'environment-id'
          Value: !Ref pEnvironmentIdTag
        - Key: 'owner'
          Value: !Ref pOwnerNameTag

  rOrgSecAlertsDLQQueue:
    Type: AWS::SQS::Queue
    Condition: cDeployAlerts
    Properties:
      QueueName: 'org-sec-alerts-dlq'
      MessageRetentionPeriod: 604800
      SqsManagedSseEnabled: true
      Tags:
        - Key: 'workload-id'
          Value: !Ref pWorkloadIdTag
        - Key: 'environment-id'
          Value: !Ref pEnvironmentIdTag
        - Key: 'owner'
          Value: !Ref pOwnerNameTag

  rOrgSecAlertsDLQQueuePolicy:
    Type: AWS::SQS::QueueInlinePolicy
    Condition: cDeployAlerts
    Properties:
      Queue: !Ref rOrgSecAlertsDLQQueue
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action:
              - sqs:SendMessage
            Resource: !GetAtt rOrgSecAlertsDLQQueue.Arn
            Condition:
              ArnLike:
                aws:SourceArn: !Sub 'arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:rule/org-sec-event-bus/org-sec-alerts-*'

Outputs:

  oOrgSecEventBusArn:
    Description: 'Organization wide security event bus ARN'
    Value: !GetAtt rOrgSecEventBus.Arn
    Export:
      Name: !Sub '${AWS::StackName}-event-bus-arn'

  oCriticalOrgSecEmailAlertsSNSTopicArn:
    Condition: cDeployEmailAlerts
    Description: 'ARN for the SNS Topic for Critical Email Alerts'
    Value: !GetAtt rCriticalOrgSecEmailAlertsSNSTopic.TopicArn
    Export:
      Name: !Sub '${AWS::StackName}-crit-email-sns-arn'

  oCriticalOrgSecSlackAlertsSNSTopicArn:
    Condition: cDeploySlackAlerts
    Description: 'ARN for the SNS Topic for Critical Slack Alerts'
    Value: !GetAtt rCriticalOrgSecSlackAlertsSNSTopic.TopicArn
    Export:
      Name: !Sub '${AWS::StackName}-crit-slack-sns-arn'

  oOrgSecAlertsDLQQueueArn:
    Condition: cDeployAlerts
    Description: 'ARN for the SQS Dead Letter Queue'
    Value: !GetAtt rOrgSecAlertsDLQQueue.Arn
    Export:
      Name: !Sub '${AWS::StackName}-dlq-sqs-arn'

  oTemplateVersion:
    Description: 'Template version'
    Value: '1.0.9'
